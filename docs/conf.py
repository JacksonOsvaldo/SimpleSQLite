# -*- coding: utf-8 -*-

import os
import sys

import sphinx_rtd_theme

from simplesqlite import __author__, __copyright__, __name__, __version__


# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
sys.path.insert(0, os.path.abspath('../simplesqlite'))

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.autodoc',
    'sphinx.ext.todo',
    'sphinx.ext.viewcode',
    'sphinx.ext.intersphinx',
    'sphinx.ext.napoleon',
]

intersphinx_mapping = {'python': ('https://docs.python.org/', None)}

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The encoding of source files.
#source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = __name__
copyright = __copyright__
author = __author__

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = __version__
# The full version, including alpha/beta/rc tags.
release = version

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'en'

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#today = ''
# Else, today_fmt is used as the format for a strftime call.
#today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = ['_build']

# The reST default role (used for this markup: `text`) to use for all
# documents.
#default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
#add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
#add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
#show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# A list of ignored prefixes for module index sorting.
#modindex_common_prefix = []

# If true, keep warnings as "system message" paragraphs in the built documents.
#keep_warnings = False

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
html_theme = 'sphinx_rtd_theme'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#html_theme_options = {}

# Add any paths that contain custom themes here, relative to this directory.
html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
#html_title = None

# A shorter title for the navigation bar.  Default is the same as html_title.
#html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
#html_logo = None

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
#html_favicon = None

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Add any extra paths that contain custom files (such as robots.txt or
# .htaccess) here, relative to this directory. These files are copied
# directly to the root of the documentation.
#html_extra_path = []

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
#html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
#html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
#html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
#html_additional_pages = {}

# If false, no module index is generated.
#html_domain_indices = True

# If false, no index is generated.
#html_use_index = True

# If true, the index is split into individual pages for each letter.
#html_split_index = False

# If true, links to the reST sources are added to the pages.
#html_show_sourcelink = True

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
#html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
#html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
#html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
#html_file_suffix = None

# Language to be used for generating the HTML full-text search index.
# Sphinx supports the following languages:
#   'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'
#   'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'
#html_search_language = 'en'

# A dictionary with options for the search language support, empty by default.
# Now only 'ja' uses this config value
#html_search_options = {'type': 'default'}

# The name of a javascript file (relative to the configuration directory) that
# implements a search results scorer. If empty, the default will be used.
#html_search_scorer = 'scorer.js'

# Output file base name for HTML help builder.
htmlhelp_basename = 'SimpleSQLitedoc'

# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #'preamble': '',

    # Latex figure (float) alignment
    #'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'SimpleSQLite.tex', u'SimpleSQLite Documentation',
     __author__, 'manual'),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
#latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
#latex_use_parts = False

# If true, show page references after internal links.
#latex_show_pagerefs = False

# If true, show URL addresses after external links.
#latex_show_urls = False

# Documents to append as an appendix to all manuals.
#latex_appendices = []

# If false, no module index is generated.
#latex_domain_indices = True


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'simplesqlite', u'SimpleSQLite Documentation',
     [author], 1)
]

# If true, show URL addresses after external links.
#man_show_urls = False


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'SimpleSQLite', u'SimpleSQLite Documentation',
     author, 'SimpleSQLite', 'One line description of project.',
     'Miscellaneous'),
]

# Documents to append as an appendix to all manuals.
#texinfo_appendices = []

# If false, no module index is generated.
#texinfo_domain_indices = True

# How to display URL addresses: 'footnote', 'no', or 'inline'.
#texinfo_show_urls = 'footnote'

# If true, do not generate a @detailmenu in the "Top" node's menu.
#texinfo_no_detailmenu = False


# ------------------------------------------------

rp_common = u"""
.. |TM| replace:: :superscript:`TM`
"""

rp_builtin = u"""
.. |False| replace:: :py:obj:`False`
.. |True| replace:: :py:obj:`True`
.. |None| replace:: :py:obj:`None`

.. |bool| replace:: :py:class:`bool`
.. |dict| replace:: :py:class:`dict`
.. |int| replace:: :py:class:`int`
.. |list| replace:: :py:class:`list`
.. |float| replace:: :py:class:`float`
.. |str| replace:: :py:class:`str`
.. |tuple| replace:: :py:obj:`tuple`

.. |OrderedDict| replace:: :py:class:`collections.OrderedDict`
"""

rp_func = u"""
.. |namedtuple| replace:: :py:func:`~collections.namedtuple`
"""

rp_class = u"""
.. |Connection| replace:: :py:class:`sqlite3.Connection`
.. |datetime| replace:: :py:class:`datetime.datetime`
.. |timedelta| replace:: :py:class:`datetime.timedelta`

.. |TableData| replace:: :py:class:`~simplesqlite.loader.data.TableData`
.. |SimpleSQLite| replace:: :py:class:`~simplesqlite.SimpleSQLite`

.. |And| replace:: :py:class:`~simplesqlite.query.And`
.. |Or| replace:: :py:class:`~simplesqlite.query.Or`
.. |Where| replace:: :py:class:`~simplesqlite.query.Where`
"""

rp_module = u"""
.. |sqlite3| replace:: :py:mod:`sqlite3`
"""

rp_attr = u"""
.. |attr_mode| replace:: :py:attr:`.mode`

.. |attr_table_name_description| replace::
    Table name string.
    Following format specifiers are replaced with specific string.

.. |attr_table_name_header| replace:: format specifier
"""

rp_method = u"""
.. |make_table_name| replace::
    Make table name string from :py:attr:`~simplesqlite.loader.interface.TableLoader.table_name`.
    Following format specifiers are replaced with specific string.
"""

rp_param = u"""
.. |primary_key| replace::
    Primary key of the creating table.

.. |index_attrs| replace::
    List of attribute names that creating indices.

.. |arg_select_table_name| replace:: Table name of executing the query.
.. |arg_select_where| replace:: ``WHERE`` clause for the query.
.. |arg_select_extra| replace:: Any other SQL clause for the query.

.. |arg_where_type| replace:: |str|/|Where|/|And|/|Or|

.. |arg_select_as_xx_columns| replace::
    Column names to get data. If the value is |None|,
    get data from all of the columns in the table.
"""

rp_raises = u"""
.. |raises_check_connection| replace::
    If not connected to a SQLite database file.

.. |raises_verify_table_existence| replace::
    If the table not found in the database.

.. |raises_operational_error| replace::
    If failed to execute a query.

.. |raises_validate_table_name| replace::
    If the name is invalid for a SQLite table name.

.. |raises_validate_attr_name| replace::
    If the name is invalid for a SQLite attribute name.

.. |raises_write_permission| replace::
    If the open |attr_mode| is neither ``"w"`` nor ``"a"``.
"""

rp_template = u"""
.. |tnt_filename| replace:: %(filename)s
.. |tnt_format_name| replace:: %(format_name)s
.. |tnt_format_id| replace:: %(format_id)s
.. |tnt_global_id| replace:: %(global_id)s
.. |tnt_key| replace:: %(key)s
.. |tnt_title| replace:: %(title)s
.. |tnt_sheet| replace:: %(sheet)s
"""

rst_prolog = (
    rp_common +
    rp_builtin +
    rp_func +
    rp_class +
    rp_module +
    rp_attr +
    rp_method +
    rp_param +
    rp_raises +
    rp_template
)
